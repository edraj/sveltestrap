/*! For license information please see Progress-Progress-mdx.0e0e4cd8.iframe.bundle.js.LICENSE.txt */
(self.webpackChunk_edraj_sveltestrap=self.webpackChunk_edraj_sveltestrap||[]).push([[860],{7074:function(r,s,e){"use strict";e.d(s,{BN:function(){return o},RP:function(){return t},gz:function(){return a},xA:function(){return c}});var n=e(6540);const o=n.createContext({});function a(r){return function(s){const e=t(s.components);return n.createElement(r,{...s,allComponents:e})}}function t(r){const s=n.useContext(o);return n.useMemo((()=>"function"==typeof r?r(s):{...s,...r}),[s,r])}const l={};function c({components:r,children:s,disableParentContext:e}){let a;return a=e?"function"==typeof r?r({}):r||l:t(r),n.createElement(o.Provider,{value:a},s)}},8331:function(r,s,e){"use strict";e.r(s),e(6540);var n=e(4848),o=e(7074),a=e(4457),t=e(920);function l(r){const s=Object.assign({h1:"h1",a:"a",p:"p",code:"code",h2:"h2"},(0,o.RP)(),r.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.W8,{title:"Components/Progress"}),"\n",(0,n.jsxs)(s.h1,{id:"progress-bootstrap-progress",children:["Progress ",(0,n.jsx)("small",{class:"bootstrap-docs",children:(0,n.jsx)(s.a,{href:"https://getbootstrap.com/docs/5.3/components/progress/",target:"_blank",rel:"nofollow noopener noreferrer",children:"Bootstrap Progress"})})]}),"\n",(0,n.jsxs)(s.p,{children:["The ",(0,n.jsx)(s.code,{children:"<Progress>"})," component displays the ongoing completion status of a task, process, or operation. It provides users with a visual indicator of how much of the task has been completed and gives a sense of the remaining time."]}),"\n",(0,n.jsx)(a.Hl,{children:(0,n.jsx)(a.gG,{of:t.Basic})}),"\n",(0,n.jsx)(a.H2,{of:t.Basic}),"\n",(0,n.jsx)(s.h2,{id:"labels",children:"Labels"}),"\n",(0,n.jsx)(a.Hl,{withSource:"none",children:(0,n.jsx)(a.gG,{of:t.Labels})}),"\n",(0,n.jsx)(a.kL,{dark:!0,language:"html",code:'\n<script lang="ts">\n  import { Progress } from \'@sveltestrap/sveltestrap\';\n<\/script>\n\n<Progress value={25} class="mb-2">25%</Progress>\n<Progress value={50} class="mb-2">1/2</Progress>\n<Progress value={75} class="mb-2">You\'re almost there!</Progress>\n<Progress color="success" value={100} class="mb-2">You did it!</Progress>\n\n<Progress multi class="mb-2">\n  <Progress bar value={15}>Meh</Progress>\n  <Progress bar color="success" value={30}>Wow!</Progress>\n  <Progress bar color="info" value={25}>Cool</Progress>\n  <Progress bar color="warning" value={20}>20%</Progress>\n  <Progress bar color="danger" value={5}>!!</Progress>\n</Progress>\n'}),"\n",(0,n.jsx)(s.h2,{id:"striped",children:"Striped"}),"\n",(0,n.jsx)(a.Hl,{withSource:"none",children:(0,n.jsx)(a.gG,{of:t.Striped})}),"\n",(0,n.jsx)(a.kL,{dark:!0,language:"html",code:'\n<script lang="ts">\n  import { Progress } from \'@sveltestrap/sveltestrap\';\n<\/script>\n\n<Progress striped value={2 * 5} class="mb-2" />\n<Progress striped color="success" value={25} class="mb-2" />\n<Progress striped color="info" value={50} class="mb-2" />\n<Progress striped color="warning" value={75} class="mb-2" />\n<Progress striped color="danger" value={100} class="mb-2" />\n\n<Progress multi class="mb-2">\n  <Progress striped bar value={10} />\n  <Progress striped bar color="success" value={30} />\n  <Progress striped bar color="warning" value={20} />\n  <Progress striped bar color="danger" value={20} />\n</Progress>\n'}),"\n",(0,n.jsx)(s.h2,{id:"animated",children:"Animated"}),"\n",(0,n.jsx)(a.Hl,{withSource:"none",children:(0,n.jsx)(a.gG,{of:t.Animated})}),"\n",(0,n.jsx)(a.kL,{dark:!0,language:"html",code:'\n<script lang="ts">\n  import { Progress } from \'@sveltestrap/sveltestrap\';\n<\/script>\n\n<Progress animated value={2 * 5} class="mb-2" />\n<Progress animated color="success" value={25} class="mb-2" />\n<Progress animated color="info" value={50} class="mb-2" />\n<Progress animated color="warning" value={75} class="mb-2" />\n<Progress animated color="danger" value={100} class="mb-2" />\n\n<Progress multi class="mb-2">\n  <Progress animated bar value={10} />\n  <Progress animated bar color="success" value={30} />\n  <Progress animated bar color="warning" value={20} />\n  <Progress animated bar color="danger" value={20} />\n</Progress>\n'}),"\n",(0,n.jsx)(s.h2,{id:"multi",children:"Multi"}),"\n",(0,n.jsxs)(s.p,{children:["You can stack multiple bars in the same ",(0,n.jsx)(s.code,{children:"Progress"})," component by passing ",(0,n.jsx)(s.code,{children:"multi"})," to the parent element."]}),"\n",(0,n.jsx)(a.Hl,{withSource:"none",children:(0,n.jsx)(a.gG,{of:t.Multi})}),"\n",(0,n.jsx)(a.kL,{dark:!0,language:"html",code:'\n<script lang="ts">\n  import { Progress } from \'@sveltestrap/sveltestrap\';\n<\/script>\n\n<Progress multi>\n  <Progress bar value={15} />\n  <Progress bar color="success" value={20} />\n  <Progress bar color="info" value={20} />\n  <Progress bar color="warning" value={20} />\n  <Progress bar color="danger" value={15} />\n</Progress>\n\n<Progress multi>\n  <Progress bar value={15}>Meh</Progress>\n  <Progress bar color="success" value={35}>Wow!</Progress>\n  <Progress bar color="warning" value={25}>25%</Progress>\n  <Progress bar color="danger" value={25}>LOOK OUT!!</Progress>\n</Progress>\n\n<Progress multi>\n  <Progress bar striped value={15}>Stripes</Progress>\n  <Progress bar animated color="success" value={30}>Animated Stripes</Progress>\n  <Progress bar color="info" value={25}>Plain</Progress>\n</Progress>\n'}),"\n",(0,n.jsx)(s.h2,{id:"max",children:"Max"}),"\n",(0,n.jsx)(a.Hl,{withSource:"none",children:(0,n.jsx)(a.gG,{of:t.Max})}),"\n",(0,n.jsx)(a.kL,{dark:!0,language:"html",code:'\n<script lang="ts">\n  import { Progress } from \'@sveltestrap/sveltestrap\';\n<\/script>\n\n<Progress value={1} max={5} />\n<Progress value={50} max={135} />\n<Progress value={75} max={111} />\n<Progress value={463} max={500} />\n\n<Progress multi>\n  <Progress bar value={5} max={55}>5</Progress>\n  <Progress bar color="success" value={15} max={55}>15</Progress>\n  <Progress bar color="warning" value={10} max={55}>10</Progress>\n  <Progress bar color="danger" value={10} max={55}>10</Progress>\n</Progress>\n'}),"\n",(0,n.jsx)(s.h2,{id:"theming",children:"Theming"}),"\n",(0,n.jsx)(a.Hl,{withSource:"none",children:(0,n.jsx)(a.gG,{of:t.Theming})}),"\n",(0,n.jsx)(a.kL,{dark:!0,language:"html",code:'\n<script lang="ts">\n  import { Progress } from \'@sveltestrap/sveltestrap\';\n<\/script>\n\n<div class="text-content">Dark Theme</div>\n<Progress theme="dark" value={25} class="mb-2">25%</Progress>\n<Progress theme="dark" striped value={2 * 5} class="mb-2" />\n<Progress theme="dark" animated value={2 * 5} class="mb-2" />\n\n<div class="text-content">Light Theme</div>\n<Progress theme="light" value={25} class="mb-2">25%</Progress>\n<Progress theme="light" striped value={2 * 5} class="mb-2" />\n<Progress theme="light" animated value={2 * 5} class="mb-2" />\n'})]})}s.default=function(r={}){const{wrapper:s}=Object.assign({},(0,o.RP)(),r.components);return s?(0,n.jsx)(s,Object.assign({},r,{children:(0,n.jsx)(l,r)})):l(r)}},2433:function(r){function s(r){var s=new Error("Cannot find module '"+r+"'");throw s.code="MODULE_NOT_FOUND",s}s.keys=function(){return[]},s.resolve=s,s.id=2433,r.exports=s},1020:function(r,s,e){"use strict";var n=e(6540),o=Symbol.for("react.element"),a=Symbol.for("react.fragment"),t=Object.prototype.hasOwnProperty,l=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,c={key:!0,ref:!0,__self:!0,__source:!0};function i(r,s,e){var n,a={},i=null,g=null;for(n in void 0!==e&&(i=""+e),void 0!==s.key&&(i=""+s.key),void 0!==s.ref&&(g=s.ref),s)t.call(s,n)&&!c.hasOwnProperty(n)&&(a[n]=s[n]);if(r&&r.defaultProps)for(n in s=r.defaultProps)void 0===a[n]&&(a[n]=s[n]);return{$$typeof:o,type:r,key:i,ref:g,props:a,_owner:l.current}}s.Fragment=a,s.jsx=i,s.jsxs=i},4848:function(r,s,e){"use strict";r.exports=e(1020)}}]);