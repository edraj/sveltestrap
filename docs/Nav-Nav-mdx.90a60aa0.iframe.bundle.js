/*! For license information please see Nav-Nav-mdx.90a60aa0.iframe.bundle.js.LICENSE.txt */
(self.webpackChunk_edraj_sveltestrap=self.webpackChunk_edraj_sveltestrap||[]).push([[8076],{7074:function(n,e,t){"use strict";t.d(e,{BN:function(){return a},RP:function(){return i},gz:function(){return r},xA:function(){return v}});var o=t(6540);const a=o.createContext({});function r(n){return function(e){const t=i(e.components);return o.createElement(n,{...e,allComponents:t})}}function i(n){const e=o.useContext(a);return o.useMemo((()=>"function"==typeof n?n(e):{...e,...n}),[e,n])}const s={};function v({components:n,children:e,disableParentContext:t}){let r;return r=t?"function"==typeof n?n({}):n||s:i(n),o.createElement(a.Provider,{value:r},e)}},3647:function(n,e,t){"use strict";t.r(e),t(6540);var o=t(4848),a=t(7074),r=t(4457),i=t(9676);function s(n){const e=Object.assign({h1:"h1",a:"a",p:"p",code:"code",h2:"h2"},(0,a.RP)(),n.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.W8,{title:"Components/Nav"}),"\n",(0,o.jsxs)(e.h1,{id:"nav-bootstrap-nav",children:["Nav ",(0,o.jsx)("small",{class:"bootstrap-docs",children:(0,o.jsx)(e.a,{href:"https://getbootstrap.com/docs/5.3/components/navs-tabs/",target:"_blank",rel:"nofollow noopener noreferrer",children:"Bootstrap Nav"})})]}),"\n",(0,o.jsxs)(e.p,{children:["The ",(0,o.jsx)(e.code,{children:"<Nav>"})," component is a responsive navigation component that can be customized to appear as tabs, links, pills, and more."]}),"\n",(0,o.jsx)(r.Hl,{children:(0,o.jsx)(r.gG,{of:i.Basic})}),"\n",(0,o.jsx)(r.H2,{of:i.Basic}),"\n",(0,o.jsx)(e.h2,{id:"tabs",children:"Tabs"}),"\n",(0,o.jsx)(r.Hl,{withSource:"none",children:(0,o.jsx)(r.gG,{of:i.Tabs})}),"\n",(0,o.jsx)(r.kL,{dark:!0,language:"html",code:'\n<script lang="ts">\n  import {\n    Nav,\n    NavItem,\n    Dropdown,\n    DropdownItem,\n    DropdownToggle,\n    DropdownMenu,\n    NavLink\n  } from \'@sveltestrap/sveltestrap\';\n\n  let isOpen = false;\n<\/script>\n\n<Nav tabs>\n  <NavItem>\n    <NavLink href="#">Link</NavLink>\n  </NavItem>\n  <Dropdown nav {isOpen} toggle={() => (isOpen = !isOpen)}>\n    <DropdownToggle nav caret>Dropdown</DropdownToggle>\n    <DropdownMenu>\n      <DropdownItem header>Header</DropdownItem>\n      <DropdownItem disabled>Action</DropdownItem>\n      <DropdownItem>Another Action</DropdownItem>\n      <DropdownItem divider />\n      <DropdownItem>Another Action</DropdownItem>\n    </DropdownMenu>\n  </Dropdown>\n  <NavItem>\n    <NavLink href="#">Link</NavLink>\n  </NavItem>\n  <NavItem>\n    <NavLink href="#">Another Link</NavLink>\n  </NavItem>\n  <NavItem>\n    <NavLink disabled href="#">Disabled Link</NavLink>\n  </NavItem>\n</Nav>\n'}),"\n",(0,o.jsx)(e.h2,{id:"pills",children:"Pills"}),"\n",(0,o.jsx)(r.Hl,{withSource:"none",children:(0,o.jsx)(r.gG,{of:i.Pills})}),"\n",(0,o.jsx)(r.kL,{dark:!0,language:"html",code:'\n<script lang="ts">\n  import {\n    Nav,\n    NavItem,\n    Dropdown,\n    DropdownItem,\n    DropdownToggle,\n    DropdownMenu,\n    NavLink\n  } from \'@sveltestrap/sveltestrap\';\n\n  let isOpen = false;\n<\/script>\n\n<Nav pills>\n  <NavItem>\n    <NavLink href="#" active>Link</NavLink>\n  </NavItem>\n  <Dropdown nav {isOpen} toggle={() => (isOpen = !isOpen)}>\n    <DropdownToggle nav caret>Dropdown</DropdownToggle>\n    <DropdownMenu>\n      <DropdownItem header>Header</DropdownItem>\n      <DropdownItem disabled>Action</DropdownItem>\n      <DropdownItem>Another Action</DropdownItem>\n      <DropdownItem divider />\n      <DropdownItem>Another Action</DropdownItem>\n    </DropdownMenu>\n  </Dropdown>\n  <NavItem>\n    <NavLink href="#">Link</NavLink>\n  </NavItem>\n  <NavItem>\n    <NavLink href="#">Another Link</NavLink>\n  </NavItem>\n  <NavItem>\n    <NavLink disabled href="#">Disabled Link</NavLink>\n  </NavItem>\n</Nav>\n'}),"\n",(0,o.jsx)(e.h2,{id:"underline",children:"Underline"}),"\n",(0,o.jsx)(r.Hl,{withSource:"none",children:(0,o.jsx)(r.gG,{of:i.Underline})}),"\n",(0,o.jsx)(r.kL,{dark:!0,language:"html",code:'\n<script lang="ts">\n  import {\n    Nav,\n    NavItem,\n    Dropdown,\n    DropdownItem,\n    DropdownToggle,\n    DropdownMenu,\n    NavLink\n  } from \'@sveltestrap/sveltestrap\';\n\n  let isOpen = false;\n<\/script>\n\n<Nav underline>\n  <NavItem>\n    <NavLink href="#" active>Link</NavLink>\n  </NavItem>\n  <Dropdown nav {isOpen} toggle={() => (isOpen = !isOpen)}>\n    <DropdownToggle nav caret>Dropdown</DropdownToggle>\n    <DropdownMenu>\n      <DropdownItem header>Header</DropdownItem>\n      <DropdownItem disabled>Action</DropdownItem>\n      <DropdownItem>Another Action</DropdownItem>\n      <DropdownItem divider />\n      <DropdownItem>Another Action</DropdownItem>\n    </DropdownMenu>\n  </Dropdown>\n  <NavItem>\n    <NavLink href="#">Link</NavLink>\n  </NavItem>\n  <NavItem>\n    <NavLink href="#">Another Link</NavLink>\n  </NavItem>\n  <NavItem>\n    <NavLink disabled href="#">Disabled Link</NavLink>\n  </NavItem>\n</Nav>\n'}),"\n",(0,o.jsx)(e.h2,{id:"vertical",children:"Vertical"}),"\n",(0,o.jsx)(r.Hl,{withSource:"none",children:(0,o.jsx)(r.gG,{of:i.Vertical})}),"\n",(0,o.jsx)(r.kL,{dark:!0,language:"html",code:'\n<script lang="ts">\n  import {\n    Nav,\n    NavItem,\n    NavLink\n  } from \'@sveltestrap/sveltestrap\';\n<\/script>\n\n<p>List Based</p>\n\n<Nav vertical>\n  <NavItem>\n    <NavLink href="#">Link</NavLink>\n  </NavItem>\n  <NavItem>\n    <NavLink href="#">Link</NavLink>\n  </NavItem>\n  <NavItem>\n    <NavLink href="#">Another Link</NavLink>\n  </NavItem>\n  <NavItem>\n    <NavLink disabled href="#">Disabled Link</NavLink>\n  </NavItem>\n</Nav>\n\n<hr />\n\n<p>Link based</p>\n\n<Nav vertical>\n  <NavLink href="#">Link</NavLink>\n  <NavLink href="#">Link</NavLink>\n  <NavLink href="#">Another Link</NavLink>\n  <NavLink disabled href="#">Disabled Link</NavLink>\n</Nav>\n'}),"\n",(0,o.jsx)(e.h2,{id:"theming",children:"Theming"}),"\n",(0,o.jsx)(r.Hl,{withSource:"none",children:(0,o.jsx)(r.gG,{of:i.Theming})}),"\n",(0,o.jsx)(r.kL,{dark:!0,language:"html",code:'\n<script lang="ts">\n  import {\n    Nav,\n    NavItem,\n    NavLink\n  } from \'@sveltestrap/sveltestrap\';\n<\/script>\n\n<Nav theme="dark">\n  <NavItem active>\n    <NavLink href="#">Link</NavLink>\n  </NavItem>\n  <NavItem>\n    <NavLink href="#">Link</NavLink>\n  </NavItem>\n  <NavItem>\n    <NavLink href="#">Another Link</NavLink>\n  </NavItem>\n  <NavItem>\n    <NavLink disabled href="#">Disabled Link</NavLink>\n  </NavItem>\n</Nav>\n\n<Nav theme="light">\n  <NavItem active>\n    <NavLink href="#">Link</NavLink>\n  </NavItem>\n  <NavItem>\n    <NavLink href="#">Link</NavLink>\n  </NavItem>\n  <NavItem>\n    <NavLink href="#">Another Link</NavLink>\n  </NavItem>\n  <NavItem>\n    <NavLink disabled href="#">Disabled Link</NavLink>\n  </NavItem>\n</Nav>\n'})]})}e.default=function(n={}){const{wrapper:e}=Object.assign({},(0,a.RP)(),n.components);return e?(0,o.jsx)(e,Object.assign({},n,{children:(0,o.jsx)(s,n)})):s(n)}},2433:function(n){function e(n){var e=new Error("Cannot find module '"+n+"'");throw e.code="MODULE_NOT_FOUND",e}e.keys=function(){return[]},e.resolve=e,e.id=2433,n.exports=e},1020:function(n,e,t){"use strict";var o=t(6540),a=Symbol.for("react.element"),r=Symbol.for("react.fragment"),i=Object.prototype.hasOwnProperty,s=o.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,v={key:!0,ref:!0,__self:!0,__source:!0};function d(n,e,t){var o,r={},d=null,p=null;for(o in void 0!==t&&(d=""+t),void 0!==e.key&&(d=""+e.key),void 0!==e.ref&&(p=e.ref),e)i.call(e,o)&&!v.hasOwnProperty(o)&&(r[o]=e[o]);if(n&&n.defaultProps)for(o in e=n.defaultProps)void 0===r[o]&&(r[o]=e[o]);return{$$typeof:a,type:n,key:d,ref:p,props:r,_owner:s.current}}e.Fragment=r,e.jsx=d,e.jsxs=d},4848:function(n,e,t){"use strict";n.exports=t(1020)}}]);